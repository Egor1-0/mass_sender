from aiogram import F, Router
from aiogram.types import Message, CallbackQuery
from aiogram.fsm.context import FSMContext

from app.filters.is_payed import IsPayed
from app.keyboards.user_keyboard import main_menu, get_post_menu, check, check_menu
from app.states.states import –°hannel, Post

from app.database import db

user_state_create_sending = Router()

user_state_create_sending.message.filter(IsPayed())

@user_state_create_sending.message(F.text == '–°–æ–∑–¥–∞—Ç—å —Ä–∞—Å—Å—ã–ª–∫—É')
async def create_newsletter(message: Message, state: FSMContext):
    await state.set_state(Post.get_post)
    await message.answer('–û—Ç–ø—Ä–∞–≤—å—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µüí¨, –∫–æ—Ç–æ—Ä–æ–µ –±—É–¥–µ—Ç —Ä–∞—Å—Å—ã–ª–∞—Ç—å—Å—è. –û–Ω–æ –º–æ–∂–µ—Ç —Å–æ–¥–µ—Ä–∂–∞—Ç—å –ª—é–±–æ–π –º–µ–¥–∏–∞-–º–∞—Ç–µ—Ä–∏–∞–ª.')


@user_state_create_sending.message(Post.get_post)
async def get_post(message: Message, state: FSMContext):
    await state.update_data(get_post = message.message_id)
    await message.answer('–î–æ–±–∞–≤–ª—è—Ç—å –∫–Ω–æ–ø–∫—É-—Å—Å—ã–ª–∫—É?', reply_markup=get_post_menu())


@user_state_create_sending.callback_query(F.data == 'yes')
async def add_buttons(callback: CallbackQuery, state: FSMContext):
    await callback.message.edit_reply_markup(None)
    await state.set_state(Post.get_button_text)
    await callback.answer('–í—ã –Ω–∞–∂–∞–ª–∏ "–î–∞"‚òëÔ∏è')
    await callback.message.answer('–í–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç –∫–Ω–æ–ø–∫–∏‚å®Ô∏è')


@user_state_create_sending.callback_query(F.data == 'no')
async def add_buttons(callback: CallbackQuery, state: FSMContext):
    await callback.message.edit_reply_markup(None)

    await state.update_data(get_button_text = None)
    await state.update_data(get_button_url = None)

    await callback.answer('–í—ã –Ω–∞–∂–∞–ª–∏ "–Ω–µ—Ç"‚ùå')

    data = await state.get_data()
    await callback.message.bot.copy_message(chat_id=callback.message.chat.id, from_chat_id=callback.message.chat.id, message_id=data['get_post'], 
                                   reply_markup=check(data['get_button_text'], data['get_button_url']))
    
    await state.set_state(Post.check)

    await callback.message.answer('–í—Å–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ?', reply_markup=check_menu())


@user_state_create_sending.message(Post.get_button_text)
async def get_button_text(message: Message, state: FSMContext):
    await state.update_data(get_button_text = message.text)
    await state.set_state(Post.get_button_url)

    await message.answer('–û—Ç–ø—Ä–∞–≤—å—Ç–µ —Å—Å—ã–ª–∫—É, –Ω–∞ –∫–æ—Ç–æ—Ä—É—é –±—É–¥–µ—Ç –∫–∏–¥–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø—Ä–∏ –Ω–∞–∂–∞—Ç–∏–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É')


@user_state_create_sending.message(Post.get_button_url)
async def get_button_url(message: Message, state: FSMContext):
    await state.update_data(get_button_url = message.text)
    await state.set_state(Post.check)

    data = await state.get_data()
    await message.bot.copy_message(chat_id=message.chat.id, from_chat_id=message.chat.id, message_id=data['get_post'], 
                                   reply_markup=check(data['get_button_text'], data['get_button_url']))
    
    await message.answer('–í—Å–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ?', reply_markup=check_menu())


@user_state_create_sending.message(Post.check,  F.text == '–î–∞')
async def get_button_url(message: Message, state: FSMContext):
    channel_ids = db.get_channels(message.from_user.id)

    data = await state.get_data()

    for channel_id in channel_ids:
        print(channel_id[0])
        # try:
        await message.bot.copy_message(chat_id=channel_id[0], from_chat_id=message.chat.id, 
                                           message_id=data['get_post'], reply_markup=check(data['get_button_text'], data['get_button_url']))
        # except:
        #     continue

    await state.clear()
    
    await message.answer('–†–∞—Å—Å—ã–ª–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞‚òëÔ∏è. –í—ã–±–µ—Ä–∏ –∫–Ω–æ–ø–∫–∏‚å®Ô∏è', reply_markup=main_menu())


@user_state_create_sending.message(Post.check,  F.text == '–ù–µ—Ç')
async def clear(message: Message, state: FSMContext):
    await state.clear()
    await message.answer('–†–∞—Å—Å—ã–ª–∫–∞ –æ—Ç–º–µ–Ω–µ–Ω–∞‚ùå. –í—ã–±–µ—Ä–∏ –∫–Ω–æ–ø–∫–∏‚å®Ô∏è', reply_markup=main_menu())